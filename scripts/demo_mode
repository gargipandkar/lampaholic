#include<Servo.h>
#include<EEPROM.h>
#include <SPI.h>
#include<SD.h>

#include "FastLED.h"
#include <math.h>
#include <Adafruit_NeoPixel.h>
#define NUM_LEDS 48
#define LED_PIN 6
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, LED_PIN, NEO_GRB + NEO_KHZ800);

//greet(68), doze(49), bed(55), bye(61)
//normal(80, 90, 45, 135), sleep(120, 160, 130, 145)

Servo S1, S2, S3, S4;

const int pushpin = 5;
const int chipSelect=4;

int i;
int val;
int servo;

File file;
int readval=0;
int ch;
const int nservos=4;


int white[3] = {255, 255, 255};
int red[3]  = {200, 69, 0};
int orange[3]   = {200,69,0};
CRGB leds[NUM_LEDS];
bool warm=false;

const int recordTime=5;

bool person=false;

void setup() 
{
 pinMode(pushpin, OUTPUT);
 
 SD.begin(chipSelect);
 
 S1.attach(7);
 S2.attach(8);
 S3.attach(9);
 S4.attach(10);
 
 Serial.begin(9600);
 digitalWrite(pushpin, HIGH);
 
 //start from normal
 S1.write(80);
 S2.write(90);
 S3.write(45);
 S4.write(135);
 
 if (!SD.begin(chipSelect)) 
 {
    Serial.println("Card failed, or not present");
    // don't do anything more:
    while (1);
  }
 Serial.println("Card initialized.");

  FastLED.addLeds<NEOPIXEL, LED_PIN>(leds, NUM_LEDS);
    for (i = 0; i < NUM_LEDS; i++) 
      leds[i] = CRGB(white[0], white[1], white[2]);
    FastLED.show(); 

  strip.begin();
  for (int i=0; i<=NUM_LEDS; ++i)
  {
    strip.setPixelColor(i, 0, 0, 0);
    strip.show();
  }
}

void fade_between(int a[3], int b[3], CRGB leds[NUM_LEDS], int del)
{
  int i, j, steps = 100;
  double dsteps = 100.0;
  double s1, s2, s3, tmp1, tmp2, tmp3;
  s1 = double((b[0] - a[0])) / dsteps; 
  s2 = double((b[1] - a[1])) / dsteps; 
  s3 = double((b[2] - a[2])) / dsteps; 
  
  tmp1 = a[0], tmp2 = a[1], tmp3 = a[2];
  
  for (i = 0; i < steps; i++) { 
      tmp1 += s1;
      tmp2 += s2; 
      tmp3 += s3; 
      
    for (j = 0; j < NUM_LEDS; j++)
      leds[j] = CRGB((int)round(tmp1), (int)round(tmp2), (int)round(tmp3)); 
    FastLED.show(); 
    delay(del);
  }
 set_definite(b, leds);
}

void set_definite(int a[3], CRGB leds[NUM_LEDS]) 
{
 int i; 
  for (i = 0; i < NUM_LEDS; i++) 
    leds[i] = CRGB(a[0], a[1], a[2]); 
  FastLED.show(); 
}

void copy()
{
   //copy from file onto EEPROM
   i=1;
   
   ch=file.read();
   while(file.available())
   {
      if(ch==13)
      {
        EEPROM.write(i, readval);
        readval=0;
        i++;
        ch=file.read();
        ch=file.read();
      }
 
      else
      {
        readval=(readval*10)+(ch-48);
        ch=file.read();
      }
    }
    
   file.close(); 
}

void loop() 
{

 if(!person)
 {
  
    for (int i=0; i<=NUM_LEDS; ++i)
    {
      strip.setPixelColor(i, 255, 255, 255);
      strip.show();
    }
    delay(100);
   
    person=true;
 }
 
 else if (person)
 {
    if(!warm)
    {
      fade_between(white, red, leds, 200);
      delay(100);
      FastLED.setBrightness(255);
      
      warm=true;
    }
    
   else if(warm)
    {
      //dozing off
      file=SD.open("data20.txt", FILE_READ);
      copy();

      for (int i = 1; i <=1024; i++) 
      {
            readval = EEPROM.read(i);
            //determine which servo to move
            if (i%nservos!=0)
              servo=i%nservos;
            else
               servo=nservos;
     
            switch(servo)
            {
              case 1: S1.write(readval);
                      break; 

              case 2: S2.write(readval);
                      break;
  
              case 3: S3.write(readval);
                      break;      

              case 4: S4.write(readval);
                      break;      
            }

            Serial.println(readval);
            delay(recordTime*4);
       }
         
      delay(100);
      
      //pointing to bed
      file=SD.open("data55.txt", FILE_READ);
      copy();

      for (int i = 1; i <=1024; i++) 
      {
            readval = EEPROM.read(i);
            //determine which servo to move
            if (i%nservos!=0)
              servo=i%nservos;
            else
               servo=nservos;
     
            switch(servo)
            {
              case 1: S1.write(readval);
                      break; 

              case 2: S2.write(readval);
                      break;
  
              case 3: S3.write(readval);
                      break;      

              case 4: S4.write(readval);
                      break;      
            }

            Serial.println(readval);
            delay(recordTime*2);
       }

       delay(100);

      //bye
      file=SD.open("data61.txt", FILE_READ);
      copy();

      for (int i = 1; i <=1024; i++) 
      {
            readval = EEPROM.read(i);
            //determine which servo to move
            if (i%nservos!=0)
              servo=i%nservos;
            else
               servo=nservos;
     
            switch(servo)
            {
              case 1: S1.write(readval);
                      break; 

              case 2: S2.write(readval);
                      break;
  
              case 3: S3.write(readval);
                      break;      

              case 4: S4.write(readval);
                      break;      
            }

            Serial.println(readval);
            delay(recordTime*2);
       }
       

      for (int i=0; i<=NUM_LEDS; ++i)
      {
        strip.setPixelColor(i, 0, 0, 0);
        strip.show();
      }
      
      delay(5000);

      person=false;
      warm=false;

      S1.write(80);
      S2.write(90);
      S3.write(45);
      S4.write(135);
    }
  }
}
